{"version":3,"sources":["viewer/create-plugin-ui.js","viewer/viewport.js","viewer/index.js","Molstar.jsx","MolstarComponent.tsx","index.tsx"],"names":["i","createPluginUI","target","spec","options","ctx","PluginUIContext","DefaultPluginUISpec","init","onBeforeUIRender","ReactDOM","render","createElement","Plugin","plugin","canvas3dInitialized","shinyStyle","PluginCommands","Canvas3D","SetSettings","settings","renderer","canvas3d","props","postprocessing","occlusion","name","params","outline","occlusionStyle","bias","blurKernelSize","radius","samples","resolutionScale","scale","threshold","color","Color","ligandPlusSurroundings","StructureSelectionQuery","MS","struct","modifier","union","includeSurroundings","0","StructureSelectionQueries","ligand","expression","ligandSurroundings","exceptBy","by","PresetParams","StructureRepresentationPresetProvider","CommonParams","CustomMaterial","Material","roughness","metalness","StructurePreset","id","display","extraParams","defaultPolymerReprType","isOptional","defaultValue","apply","ref","structureCell","StateObjectRef","resolveAndCheck","state","data","presetStaticComponent","components","polymer","reprBuilder","update","builder","typeParams","representations","buildRepresentation","type","material","sizeFactor","colorParams","carbonColor","tag","palette","customState","colorPalette","commit","revertOnError","managers","interactivity","setProps","granularity","IllustrativePreset","ignoreLight","SurfacePreset","structure","obj","quality","resolution","doubleSided","PocketPreset","builders","tryCreateComponentFromSelection","surroundings","includeParent","InteractionsPreset","interactions","ballAndStick","sizeAspectRatio","InteractionsRepresentationProvider","parentDisplay","InteractionTypeColorThemeProvider","label","background","borderWidth","value","ShowButtons","PluginConfig","item","PluginUIComponent","CustomFormats","G3dProvider","Extensions","PluginSpec","Behavior","Backgrounds","CellPack","DnatcoConfalPyramids","PDBeStructureQualityReport","RCSBAssemblySymmetry","RCSBValidationReport","ANVILMembraneOrientation","G3DFormat","ModelExport","Mp4Export","GeometryExport","MAQualityAssessment","ZenodoImport","DefaultViewerOptions","customFormats","extensions","ObjectKeys","layoutIsExpanded","layoutShowControls","layoutShowRemoteState","layoutControlsDisplay","layoutShowSequence","layoutShowLog","layoutShowLeftPanel","collapseLeftPanel","collapseRightPanel","disableAntialiasing","General","DisableAntialiasing","pixelScale","PixelScale","pickScale","PickScale","pickPadding","PickPadding","enableWboit","EnableWboit","enableDpoit","EnableDpoit","preferWebgl1","PreferWebGl1","allowMajorPerformanceCaveat","AllowMajorPerformanceCaveat","viewportShowExpand","Viewport","ShowExpand","viewportShowControls","ShowControls","viewportShowSettings","ShowSettings","viewportShowSelectionMode","ShowSelectionMode","viewportShowAnimation","ShowAnimation","viewportShowTrajectoryControls","ShowTrajectoryControls","pluginStateServer","State","DefaultServer","volumeStreamingServer","VolumeStreaming","volumeStreamingDisabled","Enabled","pdbProvider","Download","DefaultPdbProvider","emdbProvider","DefaultEmdbProvider","saccharideCompIdMapType","ViewerAutoPreset","group","description","isApplicable","a","models","some","m","QualityAssessment","QualityAssessmentPLDDTPreset","QualityAssessmentQmeanPreset","PresetStructureRepresentations","auto","MergeStructures","PluginStateTransform","BuiltIn","from","PSO","Root","to","Molecule","Structure","structures","PD","ObjectList","Text","isHidden","dependencies","Task","create","length","StateObject","Null","first","Builder","masterModel","s","units","unit","addUnit","kind","model","conformation","operator","elements","traits","getStructure","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","Viewer","this","elementOrId","os","element","document","getElementById","Error","definedOptions","Object","keys","p","defaultSpec","actions","behaviors","map","e","animations","customParamEditors","layout","initial","isExpanded","showControls","controlsDisplay","regionState","bottom","left","right","top","controls","undefined","remoteState","config","CurrentServer","DefaultRepresentationPreset","SaccharideCompIdMapType","representation","registerPreset","loadStructuresFromUrlsAndMerge","sources","file","url","format","rawData","isBinary","download","parseTrajectory","trajectory","createModel","insertModelProperties","modelProperties","createStructure","insertStructureProperties","structureProperties","push","hierarchy","updateCurrent","current","dependsOn","build","toRoot","initialized","subscribe","v","console","log","applyPreset","res","x","boundary","sphere","cell","ismobile","transform","values","alpha","camera","focusSphere","Molstar","parentRef","receptorFile","ligandFile","gtLigandFile","gtLigandFiles","files","gtFile","then","window","molstarPlugin","helper","axes","ParamDefinition","getDefaultValues","CameraHelperParams","clear","style","position","width","height","overflow","React","Component","MyFullScreen","handler","useFullScreenHandle","className","onClick","enter","handle","children","MolstarComponent","args","convertedGtLigandFiles","showExpand","StreamlitComponentBase","withStreamlitConnection","StrictMode"],"mappings":"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","file":"static/js/main.b191b283.chunk.js","sourcesContent":["import { createElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Plugin } from 'molstar/lib/mol-plugin-ui/plugin';\nimport { PluginUIContext } from 'molstar/lib/mol-plugin-ui/context';\nimport { DefaultPluginUISpec } from 'molstar/lib/mol-plugin-ui/spec';\n\nconst createPluginUI = async (target, spec, options) => {\n  const ctx = new PluginUIContext(spec || DefaultPluginUISpec());\n  await ctx.init();\n  if (options && options.onBeforeUIRender) {\n    await options.onBeforeUIRender(ctx);\n  }\n  ReactDOM.render(createElement(Plugin, { plugin: ctx }), target);\n  try {\n    await ctx.canvas3dInitialized;\n  } catch {\n    // Error reported in UI/console elsewhere.\n  }\n  return ctx;\n};\n\nexport { createPluginUI };","import React from 'react';\nimport { InteractionsRepresentationProvider } from 'molstar/lib/mol-model-props/computed/representations/interactions';\nimport { InteractionTypeColorThemeProvider } from 'molstar/lib/mol-model-props/computed/themes/interaction-type';\nimport { presetStaticComponent, StructureRepresentationPresetProvider } from 'molstar/lib/mol-plugin-state/builder/structure/representation-preset';\nimport { StructureSelectionQueries, StructureSelectionQuery } from 'molstar/lib/mol-plugin-state/helpers/structure-selection-query';\nimport { PluginUIComponent } from 'molstar/lib/mol-plugin-ui/base';\nimport { LociLabels } from 'molstar/lib/mol-plugin-ui/controls';\nimport { Button } from 'molstar/lib/mol-plugin-ui/controls/common';\nimport { BackgroundTaskProgress } from 'molstar/lib/mol-plugin-ui/task';\nimport { Toasts } from 'molstar/lib/mol-plugin-ui/toast';\nimport { Viewport, ViewportControls } from 'molstar/lib/mol-plugin-ui/viewport';\nimport { PluginCommands } from 'molstar/lib/mol-plugin/commands';\nimport { PluginConfig } from 'molstar/lib/mol-plugin/config';\nimport { MolScriptBuilder as MS } from 'molstar/lib/mol-script/language/builder';\nimport { StateObjectRef } from 'molstar/lib/mol-state';\nimport { Color } from 'molstar/lib/mol-util/color';\nimport { Material } from 'molstar/lib/mol-util/material';\n\nconst shinyStyle = (plugin) => {\n  return PluginCommands.Canvas3D.SetSettings(plugin, {\n    settings: {\n      renderer: {\n        ...plugin.canvas3d.props.renderer,\n      },\n      postprocessing: {\n        ...plugin.canvas3d.props.postprocessing,\n        occlusion: { name: 'off', params: {} },\n        outline: { name: 'off', params: {} }\n      }\n    }\n  });\n};\n\nconst occlusionStyle = (plugin) => {\n  return PluginCommands.Canvas3D.SetSettings(plugin, {\n    settings: {\n      renderer: {\n        ...(plugin.canvas3d ? plugin.canvas3d.props.renderer : {}),\n      },\n      postprocessing: {\n        ...(plugin.canvas3d ? plugin.canvas3d.props.postprocessing : {}),\n        occlusion: {\n          name: 'on', params: {\n            bias: 0.8,\n            blurKernelSize: 15,\n            radius: 5,\n            samples: 32,\n            resolutionScale: 1\n          }\n        },\n        outline: {\n          name: 'on', params: {\n            scale: 1.0,\n            threshold: 0.33,\n            color: Color(0x0000),\n          }\n        }\n      }\n    }\n  });\n};\n\nconst ligandPlusSurroundings = StructureSelectionQuery('Surrounding Residues (5 \\u212B) of Ligand plus Ligand itself', MS.struct.modifier.union([\n  MS.struct.modifier.includeSurroundings({\n    0: StructureSelectionQueries.ligand.expression,\n    radius: 5,\n    'as-whole-residues': true\n  })\n]));\n\nconst ligandSurroundings = StructureSelectionQuery('Surrounding Residues (5 \\u212B) of Ligand', MS.struct.modifier.union([\n  MS.struct.modifier.exceptBy({\n    0: ligandPlusSurroundings.expression,\n    by: StructureSelectionQueries.ligand.expression\n  })\n]));\n\nconst PresetParams = {\n  ...StructureRepresentationPresetProvider.CommonParams,\n};\n\nconst CustomMaterial = Material({ roughness: 0.2, metalness: 0 });\n\n\nexport const StructurePreset = StructureRepresentationPresetProvider({\n  id: 'preset-structure',\n  display: { name: 'Structure' },\n  extraParams: {\n    defaultPolymerReprType: {\n      isOptional: false,\n      defaultValue: 'molecular-surface',\n    },\n  },\n  params: () => ({ ...PresetParams, ...(StructurePreset.extraParams) }),\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    if (!structureCell) return {};\n\n    const components = {\n      ligand: await presetStaticComponent(plugin, structureCell, 'ligand'),\n      polymer: await presetStaticComponent(plugin, structureCell, 'polymer'),\n    };\n\n    const { update, builder, typeParams } = StructureRepresentationPresetProvider.reprBuilder(plugin, params);\n    const representations = {\n      ligand: builder.buildRepresentation(update, components.ligand, { type: 'ball-and-stick', typeParams: { ...typeParams, material: CustomMaterial, sizeFactor: 0.35 }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ligand' }),\n      polymer: builder.buildRepresentation(update, components.polymer, { type: params.defaultPolymerReprType || \"molecular-surface\", typeParams: { ...typeParams, material: CustomMaterial }, color: 'chain-id', colorParams: { palette: plugin.customState.colorPalette } }, { tag: 'polymer' }),\n    };\n\n    await update.commit({ revertOnError: true });\n    await shinyStyle(plugin);\n    plugin.managers.interactivity.setProps({ granularity: 'residue' });\n\n    return { components, representations };\n  }\n});\n\nexport const IllustrativePreset = StructureRepresentationPresetProvider({\n  id: 'preset-illustrative',\n  display: { name: 'Illustrative' },\n  params: () => PresetParams,\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    if (!structureCell) return {};\n\n    const components = {\n      ligand: await presetStaticComponent(plugin, structureCell, 'ligand'),\n      polymer: await presetStaticComponent(plugin, structureCell, 'polymer'),\n    };\n\n    const { update, builder, typeParams } = StructureRepresentationPresetProvider.reprBuilder(plugin, params);\n    const representations = {\n      ligand: builder.buildRepresentation(update, components.ligand, { type: 'spacefill', typeParams: { ...typeParams, ignoreLight: true }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ligand' }),\n      polymer: builder.buildRepresentation(update, components.polymer, { type: 'spacefill', typeParams: { ...typeParams, ignoreLight: true }, color: 'illustrative', colorParams: { palette: plugin.customState.colorPalette } }, { tag: 'polymer' }),\n    };\n\n    await update.commit({ revertOnError: true });\n    await occlusionStyle(plugin);\n    plugin.managers.interactivity.setProps({ granularity: 'residue' });\n\n    return { components, representations };\n  }\n});\n\nconst SurfacePreset = StructureRepresentationPresetProvider({\n  id: 'preset-surface',\n  display: { name: 'Surface' },\n  params: () => PresetParams,\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    const structure = structureCell && structureCell.obj && structureCell.obj.data;\n    if (!structureCell || !structure) return {};\n\n    const components = {\n      ligand: await presetStaticComponent(plugin, structureCell, 'ligand'),\n      polymer: await presetStaticComponent(plugin, structureCell, 'polymer'),\n    };\n    const { update, builder, typeParams } = StructureRepresentationPresetProvider.reprBuilder(plugin, params);\n    const representations = {\n      ligand: builder.buildRepresentation(update, components.ligand, { type: 'ball-and-stick', typeParams: { ...typeParams, material: CustomMaterial, sizeFactor: 0.26 }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ligand' }),\n      polymer: builder.buildRepresentation(update, components.polymer, { type: 'molecular-surface', typeParams: { ...typeParams, material: CustomMaterial, quality: 'custom', resolution: 0.5, doubleSided: true }, color: 'partial-charge' }, { tag: 'polymer' }),\n    };\n\n    await update.commit({ revertOnError: true });\n    await shinyStyle(plugin);\n    plugin.managers.interactivity.setProps({ granularity: 'residue' });\n\n    return { components, representations };\n  }\n});\n\nconst PocketPreset = StructureRepresentationPresetProvider({\n  id: 'preset-pocket',\n  display: { name: 'Pocket' },\n  params: () => PresetParams,\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    const structure = structureCell && structureCell.obj && structureCell.obj.data;\n    if (!structureCell || !structure) return {};\n\n    const components = {\n      ligand: await presetStaticComponent(plugin, structureCell, 'ligand'),\n      surroundings: await plugin.builders.structure.tryCreateComponentFromSelection(structureCell, ligandSurroundings, 'surroundings'),\n    };\n\n    const { update, builder, typeParams } = StructureRepresentationPresetProvider.reprBuilder(plugin, params);\n    const representations = {\n      ligand: builder.buildRepresentation(update, components.ligand, { type: 'ball-and-stick', typeParams: { ...typeParams, material: CustomMaterial, sizeFactor: 0.26 }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ligand' }),\n      surroundings: builder.buildRepresentation(update, components.surroundings, { type: 'molecular-surface', typeParams: { ...typeParams, material: CustomMaterial, includeParent: true, quality: 'custom', resolution: 0.2, doubleSided: true }, color: 'partial-charge' }, { tag: 'surroundings' }),\n    };\n\n    await update.commit({ revertOnError: true });\n    await shinyStyle(plugin);\n    plugin.managers.interactivity.setProps({ granularity: 'element' });\n\n    return { components, representations };\n  }\n});\n\nconst InteractionsPreset = StructureRepresentationPresetProvider({\n  id: 'preset-interactions',\n  display: { name: 'Interactions' },\n  params: () => PresetParams,\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    const structure = structureCell && structureCell.obj && structureCell.obj.data;\n    if (!structureCell || !structure) return {};\n\n    const components = {\n      ligand: await presetStaticComponent(plugin, structureCell, 'ligand'),\n      surroundings: await plugin.builders.structure.tryCreateComponentFromSelection(structureCell, ligandSurroundings, 'surroundings'),\n      interactions: await presetStaticComponent(plugin, structureCell, 'ligand'),\n    };\n\n    const { update, builder, typeParams } = StructureRepresentationPresetProvider.reprBuilder(plugin, params);\n    const representations = {\n      ligand: builder.buildRepresentation(update, components.ligand, { type: 'ball-and-stick', typeParams: { ...typeParams, material: CustomMaterial, sizeFactor: 0.3 }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ligand' }),\n      ballAndStick: builder.buildRepresentation(update, components.surroundings, { type: 'ball-and-stick', typeParams: { ...typeParams, material: CustomMaterial, sizeFactor: 0.1, sizeAspectRatio: 1 }, color: 'element-symbol', colorParams: { carbonColor: { name: 'element-symbol', params: {} } } }, { tag: 'ball-and-stick' }),\n      interactions: builder.buildRepresentation(update, components.interactions, { type: InteractionsRepresentationProvider, typeParams: { ...typeParams, material: CustomMaterial, includeParent: true, parentDisplay: 'between' }, color: InteractionTypeColorThemeProvider }, { tag: 'interactions' }),\n      label: builder.buildRepresentation(update, components.surroundings, { type: 'label', typeParams: { ...typeParams, material: CustomMaterial, background: false, borderWidth: 0.1 }, color: 'uniform', colorParams: { value: Color(0x000000) } }, { tag: 'label' }),\n    };\n\n    await update.commit({ revertOnError: true });\n    await shinyStyle(plugin);\n    plugin.managers.interactivity.setProps({ granularity: 'element' });\n\n    return { components, representations };\n  }\n});\n\nexport const ShowButtons = PluginConfig.item('showButtons', true);\n\nexport class ViewportComponent extends PluginUIComponent {\n\n  async _set(structures, preset) {\n    await this.plugin.managers.structure.component.clear(structures);\n    const res = await this.plugin.managers.structure.component.applyPreset(structures, preset);\n  }\n\n  set = async (preset) => {\n    await this._set(this.plugin.managers.structure.hierarchy.selection.structures, preset);\n  };\n\n  structurePreset = () => this.set(StructurePreset);\n  illustrativePreset = () => this.set(IllustrativePreset);\n  surfacePreset = () => this.set(SurfacePreset);\n  pocketPreset = () => this.set(PocketPreset);\n  interactionsPreset = () => this.set(InteractionsPreset);\n\n  get showButtons() {\n    return this.plugin.config.get(ShowButtons);\n  }\n\n  render() {\n    const VPControls = this.plugin.spec.components && this.plugin.spec.components.viewport.controls ? this.plugin.spec.components.viewport.controls : ViewportControls;\n\n    return (\n      <>\n        <Viewport />\n        {(\n          <div className='msp-viewport-top-left-controls'>\n            <div style={{ marginBottom: '4px' }}>\n              <Button onClick={this.structurePreset} >Structure</Button>\n            </div>\n            <div style={{ marginBottom: '4px' }}>\n              <Button onClick={this.illustrativePreset}>Illustrative</Button>\n            </div>\n            <div style={{ marginBottom: '4px' }}>\n              <Button onClick={this.surfacePreset}>Surface</Button>\n            </div>\n            {<div style={{ marginBottom: '4px' }}>\n              <Button onClick={this.pocketPreset}>Pocket</Button>\n            </div>}\n            <div style={{ marginBottom: '4px' }}>\n              <Button onClick={this.interactionsPreset}>Interactions</Button>\n            </div>\n          </div>\n        )}\n        <VPControls />\n        <BackgroundTaskProgress />\n        <div className='msp-highlight-toast-wrapper'>\n          <LociLabels />\n          <Toasts />\n        </div>\n      </>\n    );\n  }\n}","import { ANVILMembraneOrientation } from 'molstar/lib/extensions/anvil/behavior';\nimport { CellPack } from 'molstar/lib/extensions/cellpack';\nimport { DnatcoConfalPyramids } from 'molstar/lib/extensions/dnatco';\nimport { G3DFormat, G3dProvider } from 'molstar/lib/extensions/g3d/format';\nimport { GeometryExport } from 'molstar/lib/extensions/geo-export';\nimport { MAQualityAssessment } from 'molstar/lib/extensions/model-archive/quality-assessment/behavior';\nimport { QualityAssessmentPLDDTPreset, QualityAssessmentQmeanPreset } from 'molstar/lib/extensions/model-archive/quality-assessment/behavior';\nimport { QualityAssessment } from 'molstar/lib/extensions/model-archive/quality-assessment/prop';\nimport { ModelExport } from 'molstar/lib/extensions/model-export';\nimport { Mp4Export } from 'molstar/lib/extensions/mp4-export';\nimport { PDBeStructureQualityReport } from 'molstar/lib/extensions/pdbe';\nimport { RCSBAssemblySymmetry, RCSBValidationReport } from 'molstar/lib/extensions/rcsb';\nimport { ZenodoImport } from 'molstar/lib/extensions/zenodo';\nimport { PresetStructureRepresentations, StructureRepresentationPresetProvider } from 'molstar/lib/mol-plugin-state/builder/structure/representation-preset';\nimport { createPluginUI } from './create-plugin-ui';\nimport { DefaultPluginUISpec } from 'molstar/lib/mol-plugin-ui/spec';\nimport { PluginConfig } from 'molstar/lib/mol-plugin/config';\nimport { PluginSpec } from 'molstar/lib/mol-plugin/spec';\nimport { StateObjectRef } from 'molstar/lib/mol-state';\nimport 'molstar/lib/mol-util/polyfill';\nimport { ObjectKeys } from 'molstar/lib/mol-util/type-helpers';\nimport { Backgrounds } from 'molstar/lib/extensions/backgrounds';\nimport { PLUGIN_VERSION as version } from 'molstar/lib/mol-plugin/version';\nimport { setDebugMode, setProductionMode } from 'molstar/lib/mol-util/debug';\nimport { PluginStateObject as PSO, PluginStateTransform } from 'molstar/lib/mol-plugin-state/objects';\nimport { Task } from 'molstar/lib/mol-task';\nimport { ParamDefinition as PD } from 'molstar/lib/mol-util/param-definition';\nimport { StateObject } from 'molstar/lib/mol-state';\nimport { Structure, Model } from 'molstar/lib/mol-model/structure';\nimport { Loci } from 'molstar/lib/mol-model/loci';\nimport { StructurePreset, ViewportComponent } from './viewport';\n\nconst CustomFormats = [\n  ['g3d', G3dProvider]\n];\n\nconst Extensions = {\n  'backgrounds': PluginSpec.Behavior(Backgrounds),\n  'cellpack': PluginSpec.Behavior(CellPack),\n  'dnatco-confal-pyramids': PluginSpec.Behavior(DnatcoConfalPyramids),\n  'pdbe-structure-quality-report': PluginSpec.Behavior(PDBeStructureQualityReport),\n  'rcsb-assembly-symmetry': PluginSpec.Behavior(RCSBAssemblySymmetry),\n  'rcsb-validation-report': PluginSpec.Behavior(RCSBValidationReport),\n  'anvil-membrane-orientation': PluginSpec.Behavior(ANVILMembraneOrientation),\n  'g3d': PluginSpec.Behavior(G3DFormat),\n  'model-export': PluginSpec.Behavior(ModelExport),\n  'mp4-export': PluginSpec.Behavior(Mp4Export),\n  'geo-export': PluginSpec.Behavior(GeometryExport),\n  'ma-quality-assessment': PluginSpec.Behavior(MAQualityAssessment),\n  'zenodo-import': PluginSpec.Behavior(ZenodoImport),\n};\n\nconst DefaultViewerOptions = {\n  customFormats: CustomFormats,\n  extensions: ObjectKeys(Extensions),\n  layoutIsExpanded: false,\n  layoutShowControls: false,\n  layoutShowRemoteState: false,\n  layoutControlsDisplay: 'reactive',\n  layoutShowSequence: true,\n  layoutShowLog: false,\n  layoutShowLeftPanel: true,\n  collapseLeftPanel: false,\n  collapseRightPanel: false,\n  disableAntialiasing: PluginConfig.General.DisableAntialiasing.defaultValue,\n  pixelScale: PluginConfig.General.PixelScale.defaultValue,\n  pickScale: PluginConfig.General.PickScale.defaultValue,\n  pickPadding: PluginConfig.General.PickPadding.defaultValue,\n  enableWboit: PluginConfig.General.EnableWboit.defaultValue,\n  enableDpoit: PluginConfig.General.EnableDpoit.defaultValue,\n  preferWebgl1: PluginConfig.General.PreferWebGl1.defaultValue,\n  allowMajorPerformanceCaveat: PluginConfig.General.AllowMajorPerformanceCaveat.defaultValue,\n\n  viewportShowExpand: PluginConfig.Viewport.ShowExpand.defaultValue,\n  viewportShowControls: PluginConfig.Viewport.ShowControls.defaultValue,\n  viewportShowSettings: PluginConfig.Viewport.ShowSettings.defaultValue,\n  viewportShowSelectionMode: PluginConfig.Viewport.ShowSelectionMode.defaultValue,\n  viewportShowAnimation: PluginConfig.Viewport.ShowAnimation.defaultValue,\n  viewportShowTrajectoryControls: PluginConfig.Viewport.ShowTrajectoryControls.defaultValue,\n\n  pluginStateServer: PluginConfig.State.DefaultServer.defaultValue,\n\n  volumeStreamingServer: PluginConfig.VolumeStreaming.DefaultServer.defaultValue,\n  volumeStreamingDisabled: !PluginConfig.VolumeStreaming.Enabled.defaultValue,\n\n  pdbProvider: PluginConfig.Download.DefaultPdbProvider.defaultValue,\n  emdbProvider: PluginConfig.Download.DefaultEmdbProvider.defaultValue,\n  saccharideCompIdMapType: 'default',\n};\n\nconst ViewerAutoPreset = StructureRepresentationPresetProvider({\n  id: 'preset-structure-representation-viewer-auto',\n  display: {\n    name: 'Automatic (w/ Annotation)', group: 'Annotation',\n    description: 'Show standard automatic representation but colored by quality assessment (if available in the model).'\n  },\n  isApplicable(a) {\n    return (\n      !!a.data.models.some(m => QualityAssessment.isApplicable(m, 'pLDDT')) ||\n      !!a.data.models.some(m => QualityAssessment.isApplicable(m, 'qmean'))\n    );\n  },\n  params: () => StructureRepresentationPresetProvider.CommonParams,\n  async apply(ref, params, plugin) {\n    const structureCell = StateObjectRef.resolveAndCheck(plugin.state.data, ref);\n    const structure = structureCell && structureCell.obj && structureCell.obj.data;\n    if (!structureCell || !structure) return {};\n\n    if (structure.models.some(m => QualityAssessment.isApplicable(m, 'pLDDT'))) {\n      return await QualityAssessmentPLDDTPreset.apply(ref, params, plugin);\n    } else if (structure.models.some(m => QualityAssessment.isApplicable(m, 'qmean'))) {\n      return await QualityAssessmentQmeanPreset.apply(ref, params, plugin);\n    } else {\n      return await PresetStructureRepresentations.auto.apply(ref, params, plugin);\n    }\n  }\n});\n\nconst MergeStructures = PluginStateTransform.BuiltIn({\n  name: 'merge-structures',\n  display: { name: 'Merge Structures', description: 'Merge Structure' },\n  from: PSO.Root,\n  to: PSO.Molecule.Structure,\n  params: {\n    structures: PD.ObjectList({\n      ref: PD.Text('')\n    }, ({ ref }) => ref, { isHidden: true })\n  }\n})({\n  apply({ params, dependencies }) {\n    return Task.create('Merge Structures', async ctx => {\n      if (params.structures.length === 0) return StateObject.Null;\n\n      const first = dependencies ? dependencies[params.structures[0].ref].data : null;\n      const builder = Structure.Builder({ masterModel: first.models[0] });\n      for (const { ref } of params.structures) {\n        const s = dependencies ? dependencies[ref].data : null;\n        for (const unit of s.units) {\n          // TODO invariantId\n          builder.addUnit(unit.kind, unit.model, unit.conformation.operator, unit.elements, unit.traits);\n        }\n      }\n\n      const structure = builder.getStructure();\n      return new PSO.Molecule.Structure(structure, { label: 'Merged Structure' });\n    });\n  }\n});\n\nconst isMobile = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n  },\n  any: function () {\n    return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n  }\n};\n\nclass Viewer {\n\n  constructor(plugin) {\n    this.plugin = plugin;\n  }\n\n  static async create(elementOrId, os = {}) {\n    const element = typeof elementOrId === 'string' ? document.getElementById(elementOrId) : elementOrId;\n    if (!element) throw new Error(`Could not get element with id '${elementOrId}'`);\n\n    const definedOptions = {};\n    // filter for defined properies only so the default values\n    // are property applied\n    for (const p of Object.keys(os)) {\n      if (os[p] !== void 0) definedOptions[p] = os[p];\n    }\n\n    const options = { ...DefaultViewerOptions, ...definedOptions };\n    const defaultSpec = DefaultPluginUISpec();\n\n    const spec = {\n      actions: defaultSpec.actions,\n      behaviors: [\n        ...defaultSpec.behaviors,\n        ...options.extensions.map(e => Extensions[e]),\n      ],\n      animations: [...(defaultSpec.animations || [])],\n      customParamEditors: defaultSpec.customParamEditors,\n      customFormats: options ? options.customFormats : {},\n      layout: {\n        initial: {\n          isExpanded: options.layoutIsExpanded,\n          showControls: options.layoutShowControls,\n          controlsDisplay: options.layoutControlsDisplay,\n          regionState: {\n            bottom: 'full',\n            left: options.collapseLeftPanel ? 'collapsed' : 'full',\n            right: options.collapseRightPanel ? 'hidden' : 'full',\n            top: 'full',\n          }\n        },\n      },\n      components: {\n        ...defaultSpec.components,\n        controls: {\n          ...(defaultSpec.components ? defaultSpec.components.controls : {}),\n          top: options.layoutShowSequence ? undefined : 'none',\n          bottom: options.layoutShowLog ? undefined : 'none',\n          left: options.layoutShowLeftPanel ? undefined : 'none',\n        },\n        remoteState: options.layoutShowRemoteState ? 'default' : 'none',\n        // viewport: {\n        //   view: ViewportComponent\n        // }\n      },\n      config: [\n        [PluginConfig.General.DisableAntialiasing, options.disableAntialiasing],\n        [PluginConfig.General.PixelScale, options.pixelScale],\n        [PluginConfig.General.PickScale, options.pickScale],\n        [PluginConfig.General.PickPadding, options.pickPadding],\n        [PluginConfig.General.EnableWboit, options.enableWboit],\n        [PluginConfig.General.EnableDpoit, options.enableDpoit],\n        [PluginConfig.General.PreferWebGl1, options.preferWebgl1],\n        [PluginConfig.General.AllowMajorPerformanceCaveat, options.allowMajorPerformanceCaveat],\n        [PluginConfig.Viewport.ShowExpand, options.viewportShowExpand],\n        [PluginConfig.Viewport.ShowControls, options.viewportShowControls],\n        [PluginConfig.Viewport.ShowSettings, options.viewportShowSettings],\n        [PluginConfig.Viewport.ShowSelectionMode, options.viewportShowSelectionMode],\n        [PluginConfig.Viewport.ShowAnimation, options.viewportShowAnimation],\n        [PluginConfig.Viewport.ShowTrajectoryControls, options.viewportShowTrajectoryControls],\n        [PluginConfig.State.DefaultServer, options.pluginStateServer],\n        [PluginConfig.State.CurrentServer, options.pluginStateServer],\n        [PluginConfig.VolumeStreaming.DefaultServer, options.volumeStreamingServer],\n        [PluginConfig.VolumeStreaming.Enabled, !options.volumeStreamingDisabled],\n        [PluginConfig.Download.DefaultPdbProvider, options.pdbProvider],\n        [PluginConfig.Download.DefaultEmdbProvider, options.emdbProvider],\n        [PluginConfig.Structure.DefaultRepresentationPreset, ViewerAutoPreset.id],\n        [PluginConfig.Structure.SaccharideCompIdMapType, options.saccharideCompIdMapType],\n      ]\n    };\n\n    const plugin = await createPluginUI(element, spec, {\n      onBeforeUIRender: plugin => {\n        // the preset needs to be added before the UI renders otherwise\n        // \"Download Structure\" wont be able to pick it up\n        plugin.builders.structure.representation.registerPreset(ViewerAutoPreset);\n      },\n    });\n    return new Viewer(plugin);\n  }\n\n  static loadStructuresFromUrlsAndMerge = async (sources, plugin, options) => {\n    // clear state\n    // plugin && plugin.clear();\n\n    // if (!Array.isArray(sources) || sources.length === 0) return;\n    if (!plugin) return;\n    let structures = [];\n    for (let i = 0; i < sources.length; i++) {\n      const file = sources[i];\n      const { url, format } = file;\n      const data = file.data ? await plugin.builders.data.rawData({ data: file.data, isBinary: false }) : await plugin.builders.data.download({ url, isBinary: false });\n      const trajectory = await plugin.builders.structure.parseTrajectory(data, format);\n      const model = await plugin.builders.structure.createModel(trajectory);\n      const modelProperties = await plugin.builders.structure.insertModelProperties(model);\n      const structure = await plugin.builders.structure.createStructure(modelProperties || model);\n\n      const structureProperties = await plugin.builders.structure.insertStructureProperties(structure);\n      structures.push({ ref: structureProperties ? structureProperties.ref : structure.ref });\n    }\n\n    // remove current structures from hierarchy as they will be merged\n    // TODO only works with using loadStructuresFromUrlsAndMerge once\n    //      need some more API metho to work with the hierarchy\n    plugin.managers.structure.hierarchy.updateCurrent(plugin.managers.structure.hierarchy.current.structures, 'remove');\n    const dependsOn = structures.map(({ ref }) => ref);\n    const data = plugin.state.data.build().toRoot().apply(MergeStructures, { structures }, { dependsOn });\n    const structure = await data.commit();\n\n    const structureProperties = await plugin.builders.structure.insertStructureProperties(structure);\n    plugin.behaviors.canvas3d.initialized.subscribe(async v => {\n      console.log(StructurePreset);\n      if (StructurePreset) {\n        if (options && options.defaultPolymerReprType) {\n          StructurePreset.extraParams.defaultPolymerReprType = {\n            isOptional: false,\n            defaultValue: options.defaultPolymerReprType,\n          }\n        }\n      }\n      const res = await plugin.builders.structure.representation.applyPreset(structureProperties || structure, StructurePreset);\n      const x = res.components.ligand.data.boundary.sphere;\n      const cell = res.representations.polymer.cell;\n      const ismobile = isMobile.any();\n      plugin.state.data.build().to(cell.transform.ref).update({\n        ...cell.params?.values,\n        type: {\n          name: cell.params?.values.type.name,\n          params: {\n            ...cell.params?.values.type.params,\n            alpha: (ismobile ? 1.0 : 0.99),\n          },\n        },\n      }).commit();\n      plugin.managers.camera.focusSphere(x);\n    });\n  };\n\n}\n\nexport { Viewer, version, setDebugMode, setProductionMode };","import React, { createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { ParamDefinition } from 'molstar/lib/mol-util/param-definition';\nimport { CameraHelperParams } from 'molstar/lib/mol-canvas3d/helper/camera-helper';\nimport { Viewer } from './viewer';\n\nimport 'molstar/build/viewer/molstar.css';\n\nclass Molstar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.parentRef = \"main\";\n    this.plugin = null;\n  }\n\n  componentDidMount() {\n    const { receptorFile, ligandFile, gtLigandFile, gtLigandFiles, options } = this.props;\n    const files = [receptorFile, ligandFile]\n    gtLigandFile && files.push(gtLigandFile)\n    if (gtLigandFiles) {\n      for (let gtFile of gtLigandFiles) {\n        files.push(gtFile)\n      }\n    }\n    Viewer.create(this.parentRef, {\n      layoutIsExpanded: false,\n      viewportShowAnimation: false,\n    }).then(res => {\n      this.plugin = res.plugin;\n      window.molstarPlugin = this.plugin;\n      Viewer.loadStructuresFromUrlsAndMerge(files, this.plugin, options);\n      if (this.plugin && this.plugin.canvas3d) {\n        this.plugin.canvas3d.setProps({ camera: { helper: {\n          axes: ParamDefinition.getDefaultValues(CameraHelperParams).axes\n        } } });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.plugin && this.plugin.clear && this.plugin.clear();\n  }\n\n  render() {\n    return (\n      <div style={{ position: \"absolute\", width: '100%', height: this.props.height, overflow: \"hidden\" }}>\n        <div ref={this.parentRef} style={{ position: \"absolute\", left: 0, top: 0, right: 0, bottom: 0 }} />\n      </div>\n    )\n  }\n}\n\nMolstar.propTypes = {\n  receptorFile: PropTypes.object,\n  ligandFile: PropTypes.object,\n  gtLigandFile: PropTypes.object,\n  gtLigandFiles: PropTypes.array,\n  options: PropTypes.object,\n\n  // More\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nexport default Molstar;","import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\n// @ts-ignore\n//import Molstar from \"molstar-react\";\nimport Molstar from \"./Molstar.jsx\";\nimport './MolstarComponent.css';\n\ninterface State {}\n\nconst MyFullScreen = (props: any) => {\n  const handler = useFullScreenHandle();\n  return (\n    <>\n      <button className='fullscreen-button' onClick={handler.enter}>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button>\n      <FullScreen className='myfullscreen' handle={handler}>\n        {props.children}\n        <div id=\"main\"></div>\n      </FullScreen>\n    </>\n  );\n};\n\n\nclass MolstarComponent extends StreamlitComponentBase<State> {\n\n  public render = (): ReactNode => {\n    const height = this.props.args[\"height\"]\n    const receptorFile = this.props.args[\"receptorFile\"]\n    const ligandFile = this.props.args[\"ligandFile\"]\n    const gtLigandFile = this.props.args[\"gtLigandFile\"]\n    const gtLigandFiles = this.props.args[\"gtLigandFiles\"]\n    const convertedGtLigandFiles = []\n\n    if (receptorFile && receptorFile.data) {\n      receptorFile.data =  this.props.args[\"receptorFile_data\"];\n    }\n    if (ligandFile && ligandFile.data) {\n      ligandFile.data =  this.props.args[\"ligandFile_data\"];\n    }\n    if (gtLigandFile && gtLigandFile.data) {\n      gtLigandFile.data =  this.props.args[\"gtLigandFile_data\"];\n    }\n    if (gtLigandFiles) {\n      for (let gtFile of gtLigandFiles) {\n        convertedGtLigandFiles.push({\n          'format': gtFile.file.format,\n          'data': gtFile.file.data\n        })\n      }\n\n    }\n\n    return (\n      <div style={{ height: height }}>\n        <MyFullScreen>\n          <Molstar\n            receptorFile={ receptorFile }\n            ligandFile={ ligandFile }\n            gtLigandFile={ gtLigandFile }\n            gtLigandFiles={ convertedGtLigandFiles }\n            showExpand={false}\n            options={this.props.args['options']}\n          />\n        </MyFullScreen>\n      </div>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MolstarComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MolstarComponent from \"./MolstarComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MolstarComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}